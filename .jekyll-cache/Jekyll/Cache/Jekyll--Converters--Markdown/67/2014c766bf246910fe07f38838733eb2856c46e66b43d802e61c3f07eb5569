I"G%<h3 id="값복사">값복사</h3>

<ul>
  <li>원시값은 값을 복사할때 복사된 값을 다른 메모리에 할당 하기 때문에 원래의 값과 복사된 값이 서로에게 영향을 미치지 않음</li>
  <li>참조값은 변수가 객체의 주소를 가리키는 값이기 때문에 복사된 값(주소)이 같은 값을 가리킨다.</li>
</ul>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">{</span><span class="na">number</span><span class="p">:</span> <span class="mi">1</span><span class="p">};</span>
<span class="kd">let</span> <span class="nx">b</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
<span class="nx">b</span><span class="p">.</span><span class="nx">number</span> <span class="o">=</span> <span class="mi">2</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span> <span class="c1">//{numeber:2}</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span> <span class="c1">//{number:2}</span></code></pre></figure>

<h2 id="얕은복사">얕은복사</h2>
<ul>
  <li>객체를 복사할때 원래 값과 복사된 값이 같은 참조를 가리키고 있는것
객체안에 객체가 있을경우 한개의 객체라도 원본 객체를 참조하고 있다면 얕은복사 라고함.</li>
</ul>

<blockquote>
  <p>object.assign()</p>
  <ul>
    <li>첫번쨰 요소로 들어온 객체에 다음인자로 들어온 객체를 복사해줌.</li>
  </ul>
</blockquote>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">a</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span>
  <span class="na">b</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">c</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>
<span class="kd">const</span> <span class="nx">copiedObj</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">({},</span> <span class="nx">obj</span><span class="p">);</span>
<span class="nx">copiedObj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="o">=</span> <span class="mi">3</span>

<span class="nx">obj</span> <span class="o">===</span> <span class="nx">copiedObj</span> <span class="c1">//false</span>
<span class="nx">obj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="o">===</span> <span class="nx">copiedObj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="c1">//true</span></code></pre></figure>

<blockquote>
  <p>전개연산자</p>
</blockquote>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">a</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span>
  <span class="na">b</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">c</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">copiedObj</span> <span class="o">=</span> <span class="p">{...</span><span class="nx">obj</span><span class="p">}</span>
<span class="nx">copiedObj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="o">=</span> <span class="mi">3</span>

<span class="nx">obj</span> <span class="o">===</span> <span class="nx">copiedObj</span> <span class="c1">//false</span>
<span class="nx">obj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="o">===</span> <span class="nx">copiedObj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="c1">//true</span></code></pre></figure>

<h2 id="깊은복사">깊은복사</h2>
<ul>
  <li>객체안에 객체가 있을 경우에도 원본과의 참조가 완전히 끊어진 객체.</li>
</ul>

<blockquote>
  <p>재귀 함수를 이용한 복사</p>
</blockquote>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">a</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="na">b</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">c</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="kd">function</span> <span class="nx">copyObj</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="p">{};</span>

  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">key</span> <span class="k">in</span> <span class="nx">obj</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">object</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">result</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">copyObj</span><span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">key</span><span class="p">]);</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="nx">result</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">obj</span><span class="p">[</span><span class="nx">key</span><span class="p">];</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">copiedObj</span> <span class="o">=</span> <span class="nx">copyObj</span><span class="p">(</span><span class="nx">obj</span><span class="p">);</span>

<span class="nx">copiedObj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="o">=</span> <span class="mi">3</span>

<span class="nx">obj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="o">===</span> <span class="nx">copiedObj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="c1">//false </span></code></pre></figure>

<blockquote>
  <p>Json.stringify()</p>
  <ul>
    <li>Json.stringify()는 객체를 json문자열로 변환하는데 이과정에서 원본 객체와의 참조가 모두 끊어짐
객체를 json문자열로 변환후 Json.parse()를 이용해서 자바스크립트 객체로 만들어 주면 깊은 복사가 됨.</li>
  </ul>
</blockquote>

<figure class="highlight"><pre><code class="language-js" data-lang="js"><span class="kd">const</span> <span class="nx">obj</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">a</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="na">b</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">c</span><span class="p">:</span><span class="mi">2</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>
<span class="kd">const</span> <span class="nx">copiedObj</span> <span class="o">=</span> <span class="nx">Json</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">obj</span><span class="p">));</span>

<span class="nx">copiedObj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
<span class="nx">obj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="o">===</span> <span class="nx">copiedObj</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">c</span> <span class="c1">//false</span></code></pre></figure>

<blockquote>
  <p>라이브러리 사용</p>
  <ul>
    <li>lodash 라이브러리 사용.</li>
  </ul>
</blockquote>
:ET